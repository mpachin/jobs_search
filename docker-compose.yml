version: '2.4'

services:
  api:
    tty: true
    stdin_open: true
    build:
      context: job_offers_api
      dockerfile: Dockerfile
    volumes:
      - ./job_offers_api:/app
    ports:
      - '80:4000'
    environment:
      PGUSER: postgres
      PGPASSWORD: postgres
      PGHOST: postgres
      PGDATABASE: noveo
    depends_on:
      postgres:
        condition: service_healthy

  process_coordinates:
    tty: true
    stdin_open: true
    build:
      context: process_coordinates
      dockerfile: Dockerfile
    volumes:
      - ./process_coordinates:/app
    environment:
      PGUSER: postgres
      PGPASSWORD: postgres
      PGHOST: postgres
      PGDATABASE: noveo
    depends_on:
      postgres:
        condition: service_healthy

  db_setup:
    tty: true
    stdin_open: true
    build:
      context: .docker
      dockerfile: Dockerfile.db_setup
      args:
        PROFESSIONS_CSV_ID: '1xin9jvZLyOv0eHTvqTUlopDtOj0rnC1X'
        JOBS_CSV_ID: '1M1Krxe7827gDDU8IAzkoxQgUnxdZaakr'
    volumes:
      - ./.docker:/entrypoint
      - postgres:/var/lib/postgresql/data
    environment:
      PGUSER: postgres
      PGPASSWORD: postgres
      PGHOST: postgres
      PGDATABASE: noveo
      JOBS_CSV_FILENAME: 'technical-test-jobs'
      PROFESSIONS_CSV_FILENAME: 'technical-test-professions'
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    build:
      context: .docker
      dockerfile: Dockerfile.db
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

volumes:
  postgres:
